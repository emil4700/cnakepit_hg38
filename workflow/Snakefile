import pandas as pd
from pathlib import Path
import os
from scripts.samples_auto import read_sample # load the tsv with samples or create a new dataframe to use it, configure either in config.yaml

configfile: "config/config.yaml"

ref_file = Path(config["ref"])
#ref_fil = Path(config["ref_fil"])
bedpath = Path(config["bed"])
bedname = os.path.splitext(os.path.basename(bedpath))[0]

# either tsv provided by user, or create new from data in data folder. script works for a specific type of name formats!!!
if config["samples"]:
  samples = pd.read_csv(config["samples"], index_col = "sample", sep = '\t')
elif config["data_dir"]:
  samples = read_sample(config["data_dir"])
else:
  print("no samples detected")

#print(samples)  # Print the head of the 'samples' dataframe

rule all:
  input:
    # for QC analysis only
    "results/qc/multiqc_report.html", # qc report for reads, untrimmed and trimmed
        
    # for QC analysis up until mapping and mapping QC with qualimap:
    "results/qc_map_bwa/multiqc_report.html",

    # CNVkit and PureCN
    expand('results/cnvkit/{sample}_diagram.cnv.pdf', sample=samples.index),
    expand('results/purecn/{sample}.rds', sample=samples.index)

include: "rules/qc.smk"
#include: "rules/filter.smk"
include: "rules/map.smk"
#include: "rules/map_bowtie2.smk"
include: "rules/qc_map.smk"
#include: "rules/bcf.smk"
include: "rules/mutect2.smk"
include: "rules/stats.smk"
include: "rules/cnvkit.smk"
include: "rules/purecn.smk"

rule save_config:
  input: 
    "../config/config.yaml"
  output:
    "../results/config_used.yaml"
  shell:
    "cp {input} {output}"

